Q1. What is the total number of probabilities your robot has to keep track of for a map of size m x n?

Q2. What should be the initial value of the probabilities your robot is keeping track of?

Q3. Describe your strategy for dealing with sensor noise, and explain why it should work and how you tested it.

Q4. Describe your probability update function in detail and explain how you defined 'agreement' as well as how you 
    determined the amount by which to update probabilities.

Q5. Describe in detail your robot’s exploration strategy – it should be more complex than simply moving in the same direction
    until hitting the boundary of the map. How did you choose this strategy?

Q6. Describe in detail how beliefs are shifted when the robot gets to a boundary. Consider this problem carefully, the correct
    way to handle this is not obvious. Explain clearly what assumptions regarding the robot's motion support your strategy 
    for shifting belief values in this case.

Q7. Describe in detail how beliefs are shifted when the robot turns 90 degrees (either left or right) without going to a different
    intersection. Describe your assumptions about robot motion, and how these support your strategy for handling this case.

Q8. Explain your method for deciding when the robot has achieved correct localization.

Q9. Briefly explain your robot design choices, including sensor placement and robot mobility considerations.

Q10. What parameters did you find affect the most the ability of the robot to determine its location?

Q11. Can external factors (illumination in the room, for example) affect the ability of the robot to find itself?

Q12. On average, how many intersections does your robot need to visit to achieve successful localization?

Q13. Are there locations in the map that make localization harder? (i.e. does it matter where your robot starts its journey? Why?)
